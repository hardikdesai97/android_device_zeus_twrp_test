name: Build TWRP-12.1

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'LIBRARY_NAME'
        required: true
        default: 'twrp'
        type: choice
        options:
        - twrp
        - omni
      LIBRARY_URL:
        description: 'LIBRARY_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git'
      LIBRARY_BRANCH:
        description: 'LIBRARY_BRANCH'
        required: true
        default: 'twrp-12.1'
        type: choice
        options:
        - twrp-11
        - twrp-12.1
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/brigudav/android_device_xiaomi_zeus_twrp.git'
      DEVICE_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'android-12.1'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/zeus'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'zeus'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'recoveryimage'
        type: choice
        options:
        - recoveryimage
        - bootimage
        - vendorbootimage
      UPLOAD:
        description: 'Upload to Telegram Bot (true or false)'
        required: true
        default: 'yes'
        type: choice
        options:
        - yes
        - no
      PUBLISH:
        description: 'Publish to GitHub (true or false)'
        required: true
        default: 'yes'
        type: choice
        options:
        - yes
        - no

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04

    steps:
    - name: Remove Useless Package
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo apt -y autoremove --purge
        sudo apt -y autoclean
        sudo apt clean
    - name: Maximize Build Space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 1024
        swap-size-mb: 10240
        remove-dotnet: 'true'
        temp-reserve-mb: 1024
        remove-android: 'true'
        remove-haskell: 'true'

    - name: Check Out
      uses: actions/checkout@main

    - name: Set Variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var

    - name: Prepare Environment
      run: |
        export HOME=${GITHUB_WORKSPACE}
        cd ${GITHUB_WORKSPACE}
        sudo apt -y install git aria2 
        git clone https://gitlab.com/OrangeFox/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
        sudo bash setup/install_android_sdk.sh || true
    - name: Init Repo
      run: |
        mkdir ${GITHUB_WORKSPACE}/workspace
        cd ${GITHUB_WORKSPACE}/workspace
        git config --global user.name "brigudav"
        git config --global user.email "alexvl1972@hotmail.com"
        repo init --depth=1 -u ${{ github.event.inputs.LIBRARY_URL }} -b ${{ github.event.inputs.LIBRARY_BRANCH }}
    - name: Repo Sync
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        repo sync -j$(nproc --all)
        ls -al
    - name: Repopick Fscrypt
      if: ${{ github.event.inputs.LIBRARY_URL == 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git' && github.event.inputs.LIBRARY_BRANCH == 'twrp-12.1' }}
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        source build/envsetup.sh
        repopick 5405
        repopick 5540
    - name: Clone Device Tree
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        git clone ${{ github.event.inputs.DEVICE_URL }} -b ${{ github.event.inputs.DEVICE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
    - name: Building recovery
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        export ALLOW_MISSING_DEPENDENCIES=true
        source build/envsetup.sh
        lunch ${{ github.event.inputs.LIBRARY_NAME }}_${{ github.event.inputs.DEVICE_NAME }}-eng
        make clean
        make ${{ github.event.inputs.BUILD_TARGET }} -j$(nproc --all)
    - name: Add img to zip
      run: |
        cd ${GITHUB_WORKSPACE}/workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}
        zip -9 twrp-${{ github.event.inputs.DEVICE_NAME }}-${{ steps.var.outputs.date }}.zip recovery.img
        echo "::set-output name=name::$(find * -name *.zip -type f)"
      id: zipname

    - name: Upload recovery to Telegram Bot
      if: github.event.inputs.UPLOAD == 'true'
      run: |
        curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d text="<b>- Build for </b><i>${{ github.event.inputs.DEVICE_NAME }}</i> <b>completed%0A- End Time: </b><i>$(TZ=Australia/Sydney date +"%Y-%m-%d"-%H:%M:%S)</i>" -d chat_id=${{ secrets.TELEGRAM_TO }} -d parse_mode=HTML
        ZIP=${GITHUB_WORKSPACE}/workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ steps.zipname.outputs.name }}
        curl https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument \
          -X POST \
          -F chat_id="${{ secrets.TELEGRAM_TO }}" \
          -F document="@$ZIP" \
          --silent --show-error --fail >/dev/null &

    - name: Publish to GitHub
      if: github.event.inputs.PUBLISH == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ steps.zipname.outputs.name }}
        name: ${{ steps.zipname.outputs.name }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.TEST }}
